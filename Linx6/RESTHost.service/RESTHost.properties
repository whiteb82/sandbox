{
  "Id": "Ke1P",
  "Name": "RESTHost",
  "ServiceData": {
    "Properties": [
      {
        "Id": "API definition",
        "Type": "Compiled:String",
        "ValueUsage": "DesignTime",
        "Value": "openapi: 3.0.0\r\ninfo:\r\n  description: Linx Sample API\r\n  version: 1.0.0\r\n  title: Linx Sample API\r\npaths:\r\n  /helloworld:\r\n    get:\r\n      summary: Return the text 'Hello World!'\r\n      description: Return the text 'Hello World!'\r\n      operationId: HelloWorld\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                 type: string\r\n  /me:\r\n    get:\r\n      summary: Retrieve the properties of user object for the signed in user.\r\n      description: Retrieve the properties of user object for the signed in user\r\n      tags:\r\n        - User and Authentication\r\n      security:\r\n        - Token: []\r\n        \r\n      operationId: GetCurrentUser\r\n      responses:\r\n        '200':\r\n          description: OK (209)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/UserResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n  /users:\r\n    post:\r\n      summary: Register a new user\r\n      description: Register a new user\r\n      tags:\r\n        - User and Authentication\r\n      security:\r\n        - Token: []\r\n      operationId: CreateUser\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/NewUserRequest'\r\n        description: Details of the new user to register\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: Created(201)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/UserResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '400':\r\n          description: Bad Request (400)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n    get:\r\n      summary: List users\r\n      description: List users\r\n      tags:\r\n        - User and Authentication\r\n      security:\r\n        - ApiKeyAuth_query: []\r\n       \r\n      operationId: ListUsers\r\n      parameters:\r\n        - name: name\r\n          in: query\r\n          description: User full name\r\n          schema:\r\n            type: string\r\n        - name: email\r\n          in: query\r\n          description: User email address\r\n          schema:\r\n            type: string\r\n          \r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Users'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n\r\n  /users/{id}:\r\n    delete:\r\n      summary: Delete a user\r\n      description: Delete a user\r\n      tags:\r\n        - User and Authentication\r\n      security:\r\n        - Token: []\r\n      operationId: DeleteUser\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content: \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'    \r\n      \r\n    get:\r\n      summary: Get current user\r\n      description: Gets the currently logged-in user\r\n      tags:\r\n        - User and Authentication\r\n      security:\r\n        - Token: []\r\n      operationId: GetUser\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/UserResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'   \r\n    patch:\r\n      summary: Update a user\r\n      description: Updated user information for a user\r\n      tags:\r\n        - User and Authentication\r\n      security:\r\n        - Token: []\r\n      operationId: UpdateUser\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/UpdateUserRequest'\r\n        description: User details to update. At least **one** field is required.\r\n        required: true\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  /users/{id}/photo:\r\n    put:\r\n      summary: send file\r\n      description: Upload profile picture\r\n      operationId: UploadPhoto\r\n      tags:\r\n        - Files\r\n      security:\r\n        - Token: []\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      requestBody:\r\n          content:\r\n            application/octet-stream:    # Can be image/png, image/svg, image/gif, etc.\r\n              schema:\r\n                type: string\r\n                format: binary\r\n          required: true\r\n\r\n      responses:\r\n        '200':\r\n          description: OK (209)\r\n          content:\r\n            application/json:\r\n              schema:\r\n               type: string\r\n        '401':\r\n          description: Unauthorized (401)\r\n\r\n        '404':\r\n          description: Not found (404)\r\n\r\n    get:\r\n      summary: Recieve File\r\n      description:  Receive File\r\n      operationId: DownloadPhoto\r\n      tags:\r\n        - Files\r\n      security:\r\n        - Token: []\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: OK (209)\r\n          content:\r\n            application/octet-stream:    # Can be image/png, image/svg, image/gif, etc.\r\n              schema:\r\n                type: string\r\n                format: binary\r\n        '401':\r\n          description: Unauthorized (401)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n        '404':\r\n          description: Not found (404)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n                \r\n  /users/token:\r\n    post:\r\n      summary: Register new JWT token\r\n      description:  Register new JWT token\r\n      tags:\r\n        - User and Authentication\r\n      security:\r\n        - BasicAuth: []\r\n      operationId: GenerateUserToken\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Token'\r\n                \r\ncomponents:\r\n#Secuirty shemes available to appy to methods\r\n  securitySchemes:\r\n    BasicAuth:\r\n      type: http\r\n      scheme: basic\r\n    Token:\r\n      type: http\r\n      scheme: bearer\r\n    ApiKeyAuth_query:\r\n      type: apiKey\r\n      in: query\r\n      name: X-API-Key\r\n    ApiKeyAuth_header:\r\n      type: apiKey\r\n      in: header\r\n      name: X-API-Key\r\n    ApiKeyAuth_cookie:\r\n      type: apiKey\r\n      in: cookie\r\n      name: X-API-Key\r\n    \r\n            \r\n  #Objects used in requests, responses\r\n  schemas:\r\n    NewUser:\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: string\r\n        email:\r\n          type: string\r\n        password:\r\n          type: string\r\n          format: password\r\n        firstname:\r\n          type: string\r\n        lastname:\r\n          type: string\r\n      required:\r\n        - username\r\n          email\r\n          password\r\n          firstname\r\n          lastname\r\n    NewUserRequest:\r\n      type: object\r\n      properties:\r\n        user:\r\n          $ref: '#/components/schemas/NewUser'\r\n      required:\r\n        - user\r\n    User:\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n        username:\r\n          type: string\r\n        id:\r\n          type: string\r\n        firstname:\r\n          type: string\r\n        lastname:\r\n          type: string\r\n      required:\r\n        - email\r\n        - username\r\n    UserResponse:\r\n      type: object\r\n      properties:\r\n        user:\r\n          $ref: '#/components/schemas/User'\r\n      required:\r\n        - user\r\n    UpdateUser:\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n         \r\n        firstname:\r\n          type: string\r\n        lastname:\r\n          type: string\r\n    Users:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/User'\r\n    UpdateUserRequest:\r\n      type: object\r\n      properties:\r\n        user:\r\n          $ref: '#/components/schemas/UpdateUser'\r\n      required:\r\n        - user\r\n    Token:\r\n      type: object\r\n      properties:\r\n        access_token:\r\n          type: string\r\n        expires_in:\r\n          type: integer\r\n        token_type:\r\n          type: string\r\n    GenericErrorModel:\r\n      type: object\r\n      properties:\r\n        summary:\r\n          type: string\r\n        errors:\r\n              type: array\r\n              items:\r\n                type: string\r\n\r\n      required:\r\n        - errors\r\n"
      },
      {
        "Id": "API doc security scheme",
        "Type": "Compiled:String",
        "ValueUsage": "DesignTime",
        "Value": ""
      },
      {
        "Id": "Show server errors",
        "Type": "Compiled:Boolean",
        "ValueUsage": "RuntimeRead",
        "Value": true
      },
      {
        "Id": "Max request size",
        "Type": "Compiled:System.Nullable`1[[System.Int64, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": 3000,
        "ValueType": "Int64"
      },
      {
        "Id": "Max connections",
        "Type": "Compiled:System.Nullable`1[[System.Int64, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "CORS origins",
        "Type": "Compiled:System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "Authenticate",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": true
      },
      {
        "Id": "Base URI",
        "Type": "Compiled:String",
        "ValueUsage": "RuntimeRead",
        "Value": {
          "Expression": "$.Settings.api_base_uri +\"/demo\"",
          "CompiledExpression": "={0}+\"/demo\"",
          "Type": "Compiled:String"
        },
        "ValueType": "Linx.CSharpExpression"
      },
      {
        "Id": "Operation events",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.OperationEventCollection, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": [
          {
            "Name": "OperationEvents_BeforeOperation"
          },
          {
            "Name": "OperationEvents_AfterOperation"
          },
          {
            "Name": "OperationEvents_Authenticate"
          }
        ]
      },
      {
        "Id": "Auth config",
        "Type": "Compiled:System.Collections.Generic.List`1[[Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.AspNetCore.Authentication.AuthenticationConfiguration, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": {
          "ParsedExpression": "[{\"SchemeName\":\"Token\", \"SchemeType\":\"HttpBearer\", \"Properties\":[{\"Name\":\"Secret\", \"Value\":{\"LinxExpression\":\"[PARSED]\"}}]}]",
          "ExpressionPlaceholders": [
            {
              "typePath": [
                "[]",
                "Properties",
                "[]",
                "Value"
              ],
              "expression": {
                "Expression": "$.Settings.JWTTokenSecretSigningKey",
                "CompiledExpression": "={0}",
                "Type": "Compiled:String"
              }
            }
          ]
        },
        "ValueType": "Linx.JsonExpression"
      },
      {
        "Id": "API documentation",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.ApiDocumentation.ApiDocumentationType, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": "SwaggerUI"
      },
      {
        "Id": "Operations",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationCollection, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": [
          {
            "Name": "HelloWorld",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "GetCurrentUser",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "CreateUser",
            "HttpMethod": "POST",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "ListUsers",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "DeleteUser",
            "HttpMethod": "DELETE",
            "ResponseContentType": null
          },
          {
            "Name": "GetUser",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "UpdateUser",
            "HttpMethod": "PATCH",
            "ResponseContentType": null
          },
          {
            "Name": "UploadPhoto",
            "HttpMethod": "PUT",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "DownloadPhoto",
            "HttpMethod": "GET",
            "ResponseContentType": "application/octet-stream"
          },
          {
            "Name": "GenerateUserToken",
            "HttpMethod": "POST",
            "ResponseContentType": "application/json"
          }
        ]
      },
      {
        "Id": "Before operation",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": true
      },
      {
        "Id": "After operation",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": true
      }
    ],
    "Events": [
      {
        "Id": "CreateUser",
        "Name": "CreateUser",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:vn8k"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:pNoA"
      },
      {
        "Id": "DeleteUser",
        "Name": "DeleteUser",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:Ly7R"
      },
      {
        "Id": "DownloadPhoto",
        "Name": "DownloadPhoto",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:GHsw"
      },
      {
        "Id": "GenerateUserToken",
        "Name": "GenerateUserToken",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:JWv5"
      },
      {
        "Id": "GetCurrentUser",
        "Name": "GetCurrentUser",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:5iqY"
      },
      {
        "Id": "GetUser",
        "Name": "GetUser",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:ltrp"
      },
      {
        "Id": "HelloWorld",
        "Name": "HelloWorld",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:pgda"
      },
      {
        "Id": "ListUsers",
        "Name": "ListUsers",
        "Parameters": [
          {
            "Name": "name",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "email",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:9UsM"
      },
      {
        "Id": "OperationEvents_AfterOperation",
        "Name": "OperationEvents_AfterOperation",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Data.Out.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
      },
      {
        "Id": "OperationEvents_Authenticate",
        "Name": "OperationEvents_Authenticate",
        "Parameters": [
          {
            "Name": "AuthenticationData",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Authenticate.AuthenticateEventInputData, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Authenticate.AuthenticateEventOutput, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
      },
      {
        "Id": "OperationEvents_BeforeOperation",
        "Name": "OperationEvents_BeforeOperation",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Data.Out.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
      },
      {
        "Id": "UpdateUser",
        "Name": "UpdateUser",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "body",
            "TypeReference": "Generated:OVwJ"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:V2M9"
      },
      {
        "Id": "UploadPhoto",
        "Name": "UploadPhoto",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "body",
            "TypeReference": "Compiled:System.Collections.Generic.List`1[[System.Byte, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:Ojrt"
      }
    ]
  },
  "ServiceType": "REST:RESTHost",
  "Events": [
    "CreateUser.event",
    "GetUser.event",
    "DownloadPhoto.event",
    "UpdateUser.event",
    "ListUsers.event",
    "UploadPhoto.event",
    "GenerateUserToken.event",
    "HelloWorld.event",
    "GetCurrentUser.event",
    "DeleteUser.event",
    "OperationEvents_BeforeOperation.event",
    "OperationEvents_AfterOperation.event",
    "OperationEvents_Authenticate.event"
  ]
}